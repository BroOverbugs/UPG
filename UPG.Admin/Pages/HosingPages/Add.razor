@page "/housings/add"

<MudGrid>
    <MudItem xs="2"></MudItem>
    <MudItem xs="8">
        <MudCard Class="mt-4">
            <MudCardHeader Class="d-flex justify-center"> <h3>Add new Housing</h3> </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="6">
                        <MudTextField @bind-Value="housing.Name" Label="Name" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.BrandName" Label="Brand name" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Price" Label="Price" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Motherboard_form_factor" Label="Motherboard form factor" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Size" Label="Size" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Maximum_cooler_height" Label="Maximum cooler height" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Maximum_video_card_length" Label="Maximum video card length" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField @bind-Value="housing.Dimensions" Label="Dimensions" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Connectors_on_the_front_panel" Label="Connectors on th front panel" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Spaces_for_additional_coolers" Label="Spaces for additional coolers" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Possibility_of_installing_liquid_cooling" Label="Possibility of installing liquid cooling" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudTextField @bind-Value="housing.Case_color" Label="Case color" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
                        <MudItem Class="d-flex">
                            <MudSwitch @bind-Value="housing.Built_in_fans" ThumbIcon="@(housing.Built_in_fans == true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(housing.Built_in_fans == true ? Color.Success : Color.Error)">Built in fans</MudSwitch>
                        </MudItem>
                    </MudItem>
                </MudGrid>
                <MudTextField @bind-Value="housing.Description" Lines="5" Label="Description" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mt-4"></MudTextField>
            </MudCardContent>
            <MudCardActions Class="d-flex justify-center">
                <MudButton @onclick="Cancel" Variant="Variant.Filled">Cancel</MudButton>
                <MudButton @onclick="Save" Class="ms-2" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="2"></MudItem>
</MudGrid>

@code {
    @inject NavigationManager navigation
    @inject HttpClient httpClient
    @inject ISnackbar Snackbar
    AddHousingDto housing = new();
    private List<string> errors = new();


    private void Cancel()
    {
        navigation.NavigateTo("/housings");
    }

    private async void Save()
    {
        var json = JsonConvert.SerializeObject(housing);

        var request = new StringContent(json, Encoding.UTF8, "application/json");

        var response = await httpClient.PostAsync(Helper.URL + "housings", request);

        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Housing added successfully!", Severity.Success);
            Cancel();
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
        {
            Snackbar.Add("Informations isn't valid", Severity.Warning);
            Cancel();
        }
        else
        {
            Snackbar.Add("Some problem with the server", Severity.Error);
            Cancel();
        }
    }
}